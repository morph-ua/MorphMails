// Code generated by ent, DO NOT EDIT.

package ent

import (
	"helium/ent/letter"
	"helium/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	letterFields := schema.Letter{}.Fields()
	_ = letterFields
	// letterDescFrom is the schema descriptor for from field.
	letterDescFrom := letterFields[2].Descriptor()
	// letter.FromValidator is a validator for the "from" field. It is called by the builders before save.
	letter.FromValidator = letterDescFrom.Validators[0].(func(string) error)
	// letterDescTo is the schema descriptor for to field.
	letterDescTo := letterFields[3].Descriptor()
	// letter.ToValidator is a validator for the "to" field. It is called by the builders before save.
	letter.ToValidator = letterDescTo.Validators[0].(func(string) error)
	// letterDescCreatedAt is the schema descriptor for created_at field.
	letterDescCreatedAt := letterFields[4].Descriptor()
	// letter.DefaultCreatedAt holds the default value on creation for the created_at field.
	letter.DefaultCreatedAt = letterDescCreatedAt.Default.(time.Time)
}
