// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ConnectorsColumns holds the columns for the "connectors" table.
	ConnectorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "url", Type: field.TypeString, Unique: true},
		{Name: "secret", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
	}
	// ConnectorsTable holds the schema information for the "connectors" table.
	ConnectorsTable = &schema.Table{
		Name:       "connectors",
		Columns:    ConnectorsColumns,
		PrimaryKey: []*schema.Column{ConnectorsColumns[0]},
	}
	// LettersColumns holds the columns for the "letters" table.
	LettersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "html", Type: field.TypeString},
		{Name: "from", Type: field.TypeString},
		{Name: "to", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// LettersTable holds the schema information for the "letters" table.
	LettersTable = &schema.Table{
		Name:       "letters",
		Columns:    LettersColumns,
		PrimaryKey: []*schema.Column{LettersColumns[0]},
	}
	// ReceiversColumns holds the columns for the "receivers" table.
	ReceiversColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "connector_receivers", Type: field.TypeString},
		{Name: "user_receivers", Type: field.TypeUUID},
	}
	// ReceiversTable holds the schema information for the "receivers" table.
	ReceiversTable = &schema.Table{
		Name:       "receivers",
		Columns:    ReceiversColumns,
		PrimaryKey: []*schema.Column{ReceiversColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "receivers_connectors_receivers",
				Columns:    []*schema.Column{ReceiversColumns[2]},
				RefColumns: []*schema.Column{ConnectorsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "receivers_users_receivers",
				Columns:    []*schema.Column{ReceiversColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "emails", Type: field.TypeJSON, Nullable: true},
		{Name: "forward", Type: field.TypeBool, Default: true},
		{Name: "paid", Type: field.TypeBool, Default: false},
		{Name: "counter", Type: field.TypeInt8, Default: 0},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ConnectorsTable,
		LettersTable,
		ReceiversTable,
		UsersTable,
	}
)

func init() {
	ReceiversTable.ForeignKeys[0].RefTable = ConnectorsTable
	ReceiversTable.ForeignKeys[1].RefTable = UsersTable
}
